{"version":3,"sources":["../../src/libs/file.js"],"names":["readFile","writeFile","file","resolve","reject","err","data","content"],"mappings":";;;;;;;;;;QAEgBA,Q,GAAAA,Q;QAUAC,S,GAAAA,S;;AAZhB;;;;;;AAEO,SAASD,QAAT,CAAkBE,IAAlB,EAAwB;AAC9B,QAAO,sBAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACvC,eAAGJ,QAAH,CAAYE,IAAZ,EAAkB,MAAlB,EAA0B,UAACG,GAAD,EAAMC,IAAN,EAAe;AACvCD,MAAD,GACGD,OAAOC,GAAP,CADH,GAEGF,QAAQG,IAAR,CAFH;AAGA,GAJD;AAKA,EANM,CAAP;AAOA;;AAEM,SAASL,SAAT,CAAmBC,IAAnB,EAAyBK,OAAzB,EAAkC;AACxC,QAAO,sBAAY,UAACJ,OAAD,EAAUC,MAAV,EAAqB;AACvC,eAAGH,SAAH,CAAaC,IAAb,EAAmBK,OAAnB,EAA4B,UAACF,GAAD,EAAS;AACnCA,MAAD,GACGD,OAAOC,GAAP,CADH,GAEGF,SAFH;AAGA,GAJD;AAKA,EANM,CAAP;AAOA","file":"file.js","sourcesContent":["import fs from 'fs';\n\nexport function readFile(file) {\n\treturn new Promise((resolve, reject) => {\n\t\tfs.readFile(file, 'utf8', (err, data) => {\n\t\t\t(err)\n\t\t\t\t? reject(err)\n\t\t\t\t: resolve(data)\n\t\t});\n\t});\n}\n\nexport function writeFile(file, content) {\n\treturn new Promise((resolve, reject) => {\n\t\tfs.writeFile(file, content, (err) => {\n\t\t\t(err)\n\t\t\t\t? reject(err)\n\t\t\t\t: resolve()\n\t\t});\n\t});\n}\n"]}