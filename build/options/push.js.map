{"version":3,"sources":["../../src/options/push.js"],"names":["specActions","store","file","fileStr","spinner","start","console","log","red","stop","json","isValid","validate","error","path","dataPath","split","splice","map","replace","join","message","dispatch","update","cyan"],"mappings":";;;;;;;;;;;;;;AAAA;;;;AACA;;;;AACA;;AAEA;;AACA;;AACA;;;;AACA;;IAAYA,W;;;;;;;uEAEG,iBAAeC,KAAf,EAAsBC,IAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AACVC,aADU;AAGRC,aAHQ,GAGE,+BAAuBF,IAAvB,OAHF;;AAIdE,cAAQC,KAAR;;AAEA;AANc;AAAA;AAAA,aAQG,oBAASH,IAAT,CARH;;AAAA;AAQbC,aARa;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAWbG,cAAQC,GAAR,CAAY,gBAAMC,GAAN,aAAZ;AACAJ,cAAQK,IAAR;AAZa;;AAAA;;AAgBd;AACMC,UAjBQ,GAiBD,sBAAW,sBAAWP,OAAX,CAAX,CAjBC;;AAAA,YAkBVO,SAAS,IAlBC;AAAA;AAAA;AAAA;;AAmBbJ,cAAQC,GAAR,CAAY,gBAAMC,GAAN,CAAU,qBAAV,CAAZ;AACAJ,cAAQK,IAAR;AApBa;;AAAA;;AAwBd;AACME,aAzBQ,GAyBE,aAAcC,QAAd,CAAuBF,IAAvB,uBAzBF;;AAAA,UA0BPC,OA1BO;AAAA;AAAA;AAAA;;AA2BPE,WA3BO,GA2BC,aAAcA,KA3Bf;AA4BPC,UA5BO,GA4BAD,MAAME,QAAN,CAAeC,KAAf,CAAqB,GAArB,EACXC,MADW,CACJ,CADI,EAEXC,GAFW,CAEP;AAAA,cAAQJ,KAAKK,OAAL,CAAa,MAAb,EAAqB,GAArB,CAAR;AAAA,OAFO,EAGXC,IAHW,CAGN,KAHM,CA5BA;;AAgCbd,cAAQC,GAAR,CAAY,gBAAMC,GAAN,aAAoBK,MAAMQ,OAA1B,aAAyCP,IAAzC,QAAZ;AACAV,cAAQK,IAAR;AAjCa;;AAAA;AAAA;AAAA;AAAA,aAsCPR,MAAMqB,QAAN,CAAetB,YAAYuB,MAAZ,CAAmBb,IAAnB,CAAf,CAtCO;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAyCbN,cAAQK,IAAR;AACAH,cAAQC,GAAR,CAAY,gBAAMC,GAAN,mBAA0B,YAAEa,OAA5B,CAAZ;AA1Ca;;AAAA;;AA8CdjB,cAAQK,IAAR;AACAH,cAAQC,GAAR,CAAY,gBAAMiB,IAAN,aAAqBtB,IAArB,mBAAZ;;AA/Cc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,E","file":"push.js","sourcesContent":["import chalk from 'chalk';\nimport specValidator from 'tv4';\nimport { Spinner } from 'clui';\n\nimport { readFile } from '../libs/file';\nimport { quietParse, minifyJSON } from '../libs/json';\nimport specSchema from '../libs/spec-schema';\nimport * as specActions from '../actions/spec-actions';\n\nexport default async function(store, file) {\n\tlet fileStr;\n\n\tconst spinner = new Spinner(`Pushing ${file}â€¦`);\n\tspinner.start();\n\n\t// Read file\n\ttry {\n\t\tfileStr = await readFile(file);\n\t}\n\tcatch(e) {\n\t\tconsole.log(chalk.red(e));\n\t\tspinner.stop();\n\t\treturn;\n\t}\n\n\t// Validate JSON\n\tconst json = quietParse(minifyJSON(fileStr));\n\tif (json === null) {\n\t\tconsole.log(chalk.red('Error: Invalid JSON'));\n\t\tspinner.stop();\n\t\treturn;\n\t}\n\n\t// Validate Open API Spec\n\tconst isValid = specValidator.validate(json, specSchema);\n\tif ( ! isValid) {\n\t\tconst error = specValidator.error;\n\t\tconst path = error.dataPath.split('/')\n\t\t\t.splice(1)\n\t\t\t.map(path => path.replace(/~1/gi, '/'))\n\t\t\t.join(' > ');\n\t\tconsole.log(chalk.red(`Error: ${error.message} in \"${path}\".`));\n\t\tspinner.stop();\n\t\treturn;\n\t}\n\n\ttry {\n\t\tawait store.dispatch(specActions.update(json));\n\t}\n\tcatch(e) {\n\t\tspinner.stop();\n\t\tconsole.log(chalk.red(`Push failed: ${e.message}`));\n\t\treturn;\n\t}\n\t\n\tspinner.stop();\n\tconsole.log(chalk.cyan(`Pushed ${file} to Toolbeam.`));\n}\n"]}