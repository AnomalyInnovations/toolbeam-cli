{"version":3,"sources":["../src/index.js"],"names":["require","install","process","on","console","log","err","stack","exit","requireLogin","version","command","description","action","file","parse","argv"],"mappings":";;AAWA;;;;AAEA;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;AASA;;;;AACA;;;;;;AA1BA;AACAA,QAAQ,oBAAR,EAA8BC,OAA9B;;AAEA;AACAC,QAAQC,EAAR,CAAW,oBAAX,EAAiC,eAAO;AACpCC,UAAQC,GAAR,CAAYC,IAAIC,KAAhB;AACAL,UAAQM,IAAR,CAAa,CAAb;AACH,CAHD;;AAwBA,IAAMC,eAAe,4CAArB;;AAEA,oBACIC,OADJ,CACY,kBAAQA,OADpB;AAEG;8EAFH;;AAKA,oBACEC,OADF,CACU,OADV,EAEEC,WAFF,CAEc,mBAFd,EAGEC,MAHF,CAGS;AAAA,SAAM,oCAAN;AAAA,CAHT;;AAKA,oBACEF,OADF,CACU,IADV,EAEEC,WAFF,CAEc,oBAFd,EAGEC,MAHF,CAGS;AAAA,SAAMJ,aAAa;AAAA,WAAM,mCAAN;AAAA,GAAb,CAAN;AAAA,CAHT;;AAKA,oBACEE,OADF,CACU,MADV,EAEEC,WAFF,CAEc,yBAFd,EAGEC,MAHF,CAGS;AAAA,SAAMJ,aAAa;AAAA,WAAM,mCAAN;AAAA,GAAb,CAAN;AAAA,CAHT;;AAKA,oBACEE,OADF,CACU,aADV,EAEEC,WAFF,CAEc,yBAFd,EAGEC,MAHF,CAGS;AAAA,SAAQJ,aAAa;AAAA,WAAM,oCAAYK,IAAZ,CAAN;AAAA,GAAb,CAAR;AAAA,CAHT;;AAKA,oBACEH,OADF,CACU,QADV,EAEEC,WAFF,CAEc,sBAFd,EAGEC,MAHF,CAGS;AAAA,SAAM,qCAAN;AAAA,CAHT;;AAKA,oBAAQE,KAAR,CAAcb,QAAQc,IAAtB;;AAEA","file":"index.js","sourcesContent":["\n\n// Support source map outputs\nrequire('source-map-support').install();\n\n// Print all unhandled errors\nprocess.on('unhandledRejection', err => {\n    console.log(err.stack);\n    process.exit(1);\n});\n\nimport pkgJson from '../package.json';\n\nimport 'babel-polyfill';\nimport chalk from 'chalk';\nimport figlet from 'figlet';\nimport clear from 'clear';\nimport _requireLogin from './libs/require-login';\nimport {\n\tlist,\n\tlogin,\n\tlogout,\n\tpull,\n\tpush,\n} from './options';\n\n\nimport program from 'commander';\nimport store from './store';\n\nconst requireLogin = _requireLogin(store);\n\nprogram\n   .version(pkgJson.version)\n   /*.option('-C, --chdir <path>', 'change the working directory')\n   .option('-c, --config <path>', 'set config path. defaults to ./deploy.conf')*/;\n\nprogram\n .command('login')\n .description('login to Toolbeam')\n .action(() => login(store));\n\nprogram\n .command('ls')\n .description('list of your tools')\n .action(() => requireLogin(() => list(store)));\n\nprogram\n .command('pull')\n .description('pull spec from Toolbeam')\n .action(() => requireLogin(() => pull(store)));\n\nprogram\n .command('push <file>')\n .description('push a spec to Toolbeam')\n .action(file => requireLogin(() => push(store, file)));\n\nprogram\n .command('logout')\n .description('logout from Toolbeam')\n .action(() => logout(store));\n\nprogram.parse(process.argv);\n\n/*\nprogram\n .command('exec <cmd>')\n .description('run the given remote command')\n .action(function(cmd) {\n\t console.log('exec \"%s\"', cmd);\n });\n\nprogram\n .command('teardown <dir> [otherDirs...]')\n .description('run teardown commands')\n .action(function(dir, otherDirs) {\n\t console.log('dir \"%s\"', dir);\n\t if (otherDirs) {\n\t\t otherDirs.forEach(function (oDir) {\n\t\t\t console.log('dir \"%s\"', oDir);\n\t\t });\n\t }\n });\n\nprogram\n .command('*')\n .description('deploy the given env')\n .action(function(env) {\n\t console.log('deploying \"%s\"', env);\n });\n\n//console.log('chdir: %s config: %s  tests: %s ', program.chdir, program.config, program.noTests);\n//\n//clear();\n//console.log(\n//  chalk.green(\n//    figlet.textSync('Toolbeam', { horizontalLayout: 'full' })\n//  )\n//);\n*/\n"]}