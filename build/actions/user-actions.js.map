{"version":3,"sources":["../../src/actions/user-actions.js"],"names":["load","loadUserFromPrefs","login","logout","logoutSuccess","isLoggedIn","getSessionId","getUserEmail","types","type","USER_LOAD","user","sessionId","USER_LOAD_SUCCESS","session_id","email","password","USER_LOGIN","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","promise","client","post","data","USER_LOGOUT","USER_LOGOUT_SUCCESS","USER_LOGOUT_FAIL","state"],"mappings":";;;;;QAMgBA,I,GAAAA,I;QAMAC,iB,GAAAA,iB;QAQAC,K,GAAAA,K;QAYAC,M,GAAAA,M;QAWAC,a,GAAAA,a;QAUAC,U,GAAAA,U;QAIAC,Y,GAAAA,Y;QAIAC,Y,GAAAA,Y;;AA7DhB;;IAAYC,K;;;;AAEZ;AACA;AACA;;AAEO,SAASR,IAAT,GAAgB;AACtB,QAAO;AACNS,QAAMD,MAAME;AADN,EAAP;AAGA;;AAEM,SAAST,iBAAT,CAA2BU,IAA3B,EAAiCC,SAAjC,EAA4C;AAClD,QAAO;AACNH,QAAMD,MAAMK,iBADN;AAENF,QAAMA,IAFA;AAGNG,cAAYF;AAHN,EAAP;AAKA;;AAEM,SAASV,KAAT,CAAea,KAAf,EAAsBC,QAAtB,EAAgC;AACtC,QAAO;AACNR,SAAO,CAACA,MAAMS,UAAP,EAAmBT,MAAMU,kBAAzB,EAA6CV,MAAMW,eAAnD,CADD;AAENC,WAAS;AAAA,UAAUC,OAAOC,IAAP,CAAY,aAAZ,EAA2B;AAC7CC,UAAM;AACLR,YAAOA,KADF;AAELC,eAAUA;AAFL;AADuC,IAA3B,CAAV;AAAA;AAFH,EAAP;AASA;;AAEM,SAASb,MAAT,GAAkB;AACxB,QAAO;AACNK,SAAO,CAACA,MAAMgB,WAAP,EAAoBhB,MAAMiB,mBAA1B,EAA+CjB,MAAMkB,gBAArD,CADD;AAENN,WAAS,iBAACC,MAAD,EAAST,SAAT;AAAA,UAAuBS,OAAOC,IAAP,CAAY,cAAZ,EAA4B;AAC3DC,UAAM;AACLT,iBAAYF;AADP;AADqD,IAA5B,CAAvB;AAAA;AAFH,EAAP;AAQA;;AAEM,SAASR,aAAT,GAAyB;AAC/B,QAAO;AACNK,QAAMD,MAAMiB;AADN,EAAP;AAGA;;AAED;AACA;AACA;;AAEO,SAASpB,UAAT,CAAoBsB,KAApB,EAA2B;AACjC,QAAQA,MAAMhB,IAAN,CAAWG,UAAX,KAA0B,IAAlC;AACA;;AAEM,SAASR,YAAT,CAAsBqB,KAAtB,EAA6B;AACnC,QAAOA,MAAMhB,IAAN,CAAWG,UAAlB;AACA;;AAEM,SAASP,YAAT,CAAsBoB,KAAtB,EAA6B;AACnC,QAAOA,MAAMhB,IAAN,CAAWA,IAAX,CAAgBI,KAAvB;AACA","file":"user-actions.js","sourcesContent":["import * as types from './action-types';\n\n/////////////\n// Actions //\n/////////////\n\nexport function load() {\n\treturn {\n\t\ttype: types.USER_LOAD,\n\t};\n}\n\nexport function loadUserFromPrefs(user, sessionId) {\n\treturn {\n\t\ttype: types.USER_LOAD_SUCCESS,\n\t\tuser: user,\n\t\tsession_id: sessionId,\n\t};\n}\n\nexport function login(email, password) {\n\treturn {\n\t\ttypes: [types.USER_LOGIN, types.USER_LOGIN_SUCCESS, types.USER_LOGIN_FAIL],\n\t\tpromise: client => client.post('/auth/login', {\n\t\t\tdata: {\n\t\t\t\temail: email,\n\t\t\t\tpassword: password,\n\t\t\t}\n\t\t})\n\t};\n}\n\nexport function logout() {\n\treturn {\n\t\ttypes: [types.USER_LOGOUT, types.USER_LOGOUT_SUCCESS, types.USER_LOGOUT_FAIL],\n\t\tpromise: (client, sessionId) => client.post('/user/logout', {\n\t\t\tdata: {\n\t\t\t\tsession_id: sessionId,\n\t\t\t}\n\t\t})\n\t};\n}\n\nexport function logoutSuccess() {\n\treturn {\n\t\ttype: types.USER_LOGOUT_SUCCESS\n\t};\n}\n\n//////////////////////\n// Public Functions //\n//////////////////////\n\nexport function isLoggedIn(state) {\n\treturn (state.user.session_id !== null);\n}\n\nexport function getSessionId(state) {\n\treturn state.user.session_id;\n}\n\nexport function getUserEmail(state) {\n\treturn state.user.user.email;\n}\n"]}