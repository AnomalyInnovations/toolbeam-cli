'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.load = load;
exports.loadUserFromPrefs = loadUserFromPrefs;
exports.login = login;
exports.logout = logout;
exports.logoutSuccess = logoutSuccess;
exports.signup = signup;
exports.isLoggedIn = isLoggedIn;
exports.getSessionId = getSessionId;
exports.getUserEmail = getUserEmail;

var _actionTypes = require('./action-types');

var types = _interopRequireWildcard(_actionTypes);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

/////////////
// Actions //
/////////////

function load() {
	return {
		type: types.USER_LOAD
	};
}

function loadUserFromPrefs(user, sessionId) {
	return {
		type: types.USER_LOAD_SUCCESS,
		user: user,
		session_id: sessionId
	};
}

function login(email, password) {
	return {
		types: [types.USER_LOGIN, types.USER_LOGIN_SUCCESS, types.USER_LOGIN_FAIL],
		promise: function promise(client) {
			return client.post('/auth/login', {
				data: {
					email: email,
					password: password
				}
			});
		}
	};
}

function logout() {
	return {
		types: [types.USER_LOGOUT, types.USER_LOGOUT_SUCCESS, types.USER_LOGOUT_FAIL],
		promise: function promise(client, sessionId) {
			return client.post('/user/logout', {
				data: {
					session_id: sessionId
				}
			});
		}
	};
}

function logoutSuccess() {
	return {
		type: types.USER_LOGOUT_SUCCESS
	};
}

function signup(email, password) {
	return {
		types: [types.USER_SIGNUP, types.USER_SIGNUP_SUCCESS, types.USER_SIGNUP_FAIL],
		promise: function promise(client) {
			return client.post('/auth/signup', {
				data: {
					email: email,
					password: password
				}
			});
		}
	};
}

//////////////////////
// Public Functions //
//////////////////////

function isLoggedIn(state) {
	return state.user.session_id !== null;
}

function getSessionId(state) {
	return state.user.session_id;
}

function getUserEmail(state) {
	return state.user.user.email;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9hY3Rpb25zL3VzZXItYWN0aW9ucy5qcyJdLCJuYW1lcyI6WyJsb2FkIiwibG9hZFVzZXJGcm9tUHJlZnMiLCJsb2dpbiIsImxvZ291dCIsImxvZ291dFN1Y2Nlc3MiLCJzaWdudXAiLCJpc0xvZ2dlZEluIiwiZ2V0U2Vzc2lvbklkIiwiZ2V0VXNlckVtYWlsIiwidHlwZXMiLCJ0eXBlIiwiVVNFUl9MT0FEIiwidXNlciIsInNlc3Npb25JZCIsIlVTRVJfTE9BRF9TVUNDRVNTIiwic2Vzc2lvbl9pZCIsImVtYWlsIiwicGFzc3dvcmQiLCJVU0VSX0xPR0lOIiwiVVNFUl9MT0dJTl9TVUNDRVNTIiwiVVNFUl9MT0dJTl9GQUlMIiwicHJvbWlzZSIsImNsaWVudCIsInBvc3QiLCJkYXRhIiwiVVNFUl9MT0dPVVQiLCJVU0VSX0xPR09VVF9TVUNDRVNTIiwiVVNFUl9MT0dPVVRfRkFJTCIsIlVTRVJfU0lHTlVQIiwiVVNFUl9TSUdOVVBfU1VDQ0VTUyIsIlVTRVJfU0lHTlVQX0ZBSUwiLCJzdGF0ZSJdLCJtYXBwaW5ncyI6Ijs7Ozs7UUFNZ0JBLEksR0FBQUEsSTtRQU1BQyxpQixHQUFBQSxpQjtRQVFBQyxLLEdBQUFBLEs7UUFZQUMsTSxHQUFBQSxNO1FBV0FDLGEsR0FBQUEsYTtRQU1BQyxNLEdBQUFBLE07UUFnQkFDLFUsR0FBQUEsVTtRQUlBQyxZLEdBQUFBLFk7UUFJQUMsWSxHQUFBQSxZOztBQXpFaEI7O0lBQVlDLEs7Ozs7QUFFWjtBQUNBO0FBQ0E7O0FBRU8sU0FBU1QsSUFBVCxHQUFnQjtBQUN0QixRQUFPO0FBQ05VLFFBQU1ELE1BQU1FO0FBRE4sRUFBUDtBQUdBOztBQUVNLFNBQVNWLGlCQUFULENBQTJCVyxJQUEzQixFQUFpQ0MsU0FBakMsRUFBNEM7QUFDbEQsUUFBTztBQUNOSCxRQUFNRCxNQUFNSyxpQkFETjtBQUVORixRQUFNQSxJQUZBO0FBR05HLGNBQVlGO0FBSE4sRUFBUDtBQUtBOztBQUVNLFNBQVNYLEtBQVQsQ0FBZWMsS0FBZixFQUFzQkMsUUFBdEIsRUFBZ0M7QUFDdEMsUUFBTztBQUNOUixTQUFPLENBQUNBLE1BQU1TLFVBQVAsRUFBbUJULE1BQU1VLGtCQUF6QixFQUE2Q1YsTUFBTVcsZUFBbkQsQ0FERDtBQUVOQyxXQUFTO0FBQUEsVUFBVUMsT0FBT0MsSUFBUCxDQUFZLGFBQVosRUFBMkI7QUFDN0NDLFVBQU07QUFDTFIsWUFBT0EsS0FERjtBQUVMQyxlQUFVQTtBQUZMO0FBRHVDLElBQTNCLENBQVY7QUFBQTtBQUZILEVBQVA7QUFTQTs7QUFFTSxTQUFTZCxNQUFULEdBQWtCO0FBQ3hCLFFBQU87QUFDTk0sU0FBTyxDQUFDQSxNQUFNZ0IsV0FBUCxFQUFvQmhCLE1BQU1pQixtQkFBMUIsRUFBK0NqQixNQUFNa0IsZ0JBQXJELENBREQ7QUFFTk4sV0FBUyxpQkFBQ0MsTUFBRCxFQUFTVCxTQUFUO0FBQUEsVUFBdUJTLE9BQU9DLElBQVAsQ0FBWSxjQUFaLEVBQTRCO0FBQzNEQyxVQUFNO0FBQ0xULGlCQUFZRjtBQURQO0FBRHFELElBQTVCLENBQXZCO0FBQUE7QUFGSCxFQUFQO0FBUUE7O0FBRU0sU0FBU1QsYUFBVCxHQUF5QjtBQUMvQixRQUFPO0FBQ05NLFFBQU1ELE1BQU1pQjtBQUROLEVBQVA7QUFHQTs7QUFFTSxTQUFTckIsTUFBVCxDQUFnQlcsS0FBaEIsRUFBdUJDLFFBQXZCLEVBQWlDO0FBQ3ZDLFFBQU87QUFDTlIsU0FBTyxDQUFDQSxNQUFNbUIsV0FBUCxFQUFvQm5CLE1BQU1vQixtQkFBMUIsRUFBK0NwQixNQUFNcUIsZ0JBQXJELENBREQ7QUFFTlQsV0FBUztBQUFBLFVBQVVDLE9BQU9DLElBQVAsQ0FBWSxjQUFaLEVBQTRCO0FBQzlDQyxVQUFNO0FBQ0xSLFlBQU9BLEtBREY7QUFFTEMsZUFBVUE7QUFGTDtBQUR3QyxJQUE1QixDQUFWO0FBQUE7QUFGSCxFQUFQO0FBU0E7O0FBRUQ7QUFDQTtBQUNBOztBQUVPLFNBQVNYLFVBQVQsQ0FBb0J5QixLQUFwQixFQUEyQjtBQUNqQyxRQUFRQSxNQUFNbkIsSUFBTixDQUFXRyxVQUFYLEtBQTBCLElBQWxDO0FBQ0E7O0FBRU0sU0FBU1IsWUFBVCxDQUFzQndCLEtBQXRCLEVBQTZCO0FBQ25DLFFBQU9BLE1BQU1uQixJQUFOLENBQVdHLFVBQWxCO0FBQ0E7O0FBRU0sU0FBU1AsWUFBVCxDQUFzQnVCLEtBQXRCLEVBQTZCO0FBQ25DLFFBQU9BLE1BQU1uQixJQUFOLENBQVdBLElBQVgsQ0FBZ0JJLEtBQXZCO0FBQ0EiLCJmaWxlIjoidXNlci1hY3Rpb25zLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgdHlwZXMgZnJvbSAnLi9hY3Rpb24tdHlwZXMnO1xuXG4vLy8vLy8vLy8vLy8vXG4vLyBBY3Rpb25zIC8vXG4vLy8vLy8vLy8vLy8vXG5cbmV4cG9ydCBmdW5jdGlvbiBsb2FkKCkge1xuXHRyZXR1cm4ge1xuXHRcdHR5cGU6IHR5cGVzLlVTRVJfTE9BRCxcblx0fTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGxvYWRVc2VyRnJvbVByZWZzKHVzZXIsIHNlc3Npb25JZCkge1xuXHRyZXR1cm4ge1xuXHRcdHR5cGU6IHR5cGVzLlVTRVJfTE9BRF9TVUNDRVNTLFxuXHRcdHVzZXI6IHVzZXIsXG5cdFx0c2Vzc2lvbl9pZDogc2Vzc2lvbklkLFxuXHR9O1xufVxuXG5leHBvcnQgZnVuY3Rpb24gbG9naW4oZW1haWwsIHBhc3N3b3JkKSB7XG5cdHJldHVybiB7XG5cdFx0dHlwZXM6IFt0eXBlcy5VU0VSX0xPR0lOLCB0eXBlcy5VU0VSX0xPR0lOX1NVQ0NFU1MsIHR5cGVzLlVTRVJfTE9HSU5fRkFJTF0sXG5cdFx0cHJvbWlzZTogY2xpZW50ID0+IGNsaWVudC5wb3N0KCcvYXV0aC9sb2dpbicsIHtcblx0XHRcdGRhdGE6IHtcblx0XHRcdFx0ZW1haWw6IGVtYWlsLFxuXHRcdFx0XHRwYXNzd29yZDogcGFzc3dvcmQsXG5cdFx0XHR9XG5cdFx0fSlcblx0fTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGxvZ291dCgpIHtcblx0cmV0dXJuIHtcblx0XHR0eXBlczogW3R5cGVzLlVTRVJfTE9HT1VULCB0eXBlcy5VU0VSX0xPR09VVF9TVUNDRVNTLCB0eXBlcy5VU0VSX0xPR09VVF9GQUlMXSxcblx0XHRwcm9taXNlOiAoY2xpZW50LCBzZXNzaW9uSWQpID0+IGNsaWVudC5wb3N0KCcvdXNlci9sb2dvdXQnLCB7XG5cdFx0XHRkYXRhOiB7XG5cdFx0XHRcdHNlc3Npb25faWQ6IHNlc3Npb25JZCxcblx0XHRcdH1cblx0XHR9KVxuXHR9O1xufVxuXG5leHBvcnQgZnVuY3Rpb24gbG9nb3V0U3VjY2VzcygpIHtcblx0cmV0dXJuIHtcblx0XHR0eXBlOiB0eXBlcy5VU0VSX0xPR09VVF9TVUNDRVNTXG5cdH07XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBzaWdudXAoZW1haWwsIHBhc3N3b3JkKSB7XG5cdHJldHVybiB7XG5cdFx0dHlwZXM6IFt0eXBlcy5VU0VSX1NJR05VUCwgdHlwZXMuVVNFUl9TSUdOVVBfU1VDQ0VTUywgdHlwZXMuVVNFUl9TSUdOVVBfRkFJTF0sXG5cdFx0cHJvbWlzZTogY2xpZW50ID0+IGNsaWVudC5wb3N0KCcvYXV0aC9zaWdudXAnLCB7XG5cdFx0XHRkYXRhOiB7XG5cdFx0XHRcdGVtYWlsOiBlbWFpbCxcblx0XHRcdFx0cGFzc3dvcmQ6IHBhc3N3b3JkLFxuXHRcdFx0fVxuXHRcdH0pXG5cdH07XG59XG5cbi8vLy8vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFB1YmxpYyBGdW5jdGlvbnMgLy9cbi8vLy8vLy8vLy8vLy8vLy8vLy8vLy9cblxuZXhwb3J0IGZ1bmN0aW9uIGlzTG9nZ2VkSW4oc3RhdGUpIHtcblx0cmV0dXJuIChzdGF0ZS51c2VyLnNlc3Npb25faWQgIT09IG51bGwpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gZ2V0U2Vzc2lvbklkKHN0YXRlKSB7XG5cdHJldHVybiBzdGF0ZS51c2VyLnNlc3Npb25faWQ7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBnZXRVc2VyRW1haWwoc3RhdGUpIHtcblx0cmV0dXJuIHN0YXRlLnVzZXIudXNlci5lbWFpbDtcbn1cbiJdfQ==