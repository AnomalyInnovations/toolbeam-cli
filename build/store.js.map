{"version":3,"sources":["../src/store.js"],"names":["reducers","client","preferences","middleware","createStoreWithMiddleware","appReducer","reducer","state","action","type","undefined"],"mappings":";;;;;;AAAA;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;IAAYA,Q;;AACZ;;AAEA;;;;;;AASA,IAAMC,SAAS,yBAAf;AACA,IAAMC,cAAc,0BAAgB,UAAhB,CAApB;;AAEA,IAAMC,aAAa,8FAIlB,qCAAoBF,MAApB,CAJkB,EAKlB,sCAAqBC,WAArB,CALkB,EAMlB,+CANkB,CAAnB;;AASA,IAAME,4BAA4B,wCAAmBD,UAAnB,qBAAlC;AACA,IAAME,aAAa,4BAAgBL,QAAhB,CAAnB;AACA,IAAMM,UAAW,SAAXA,OAAW,CAACC,KAAD,EAAQC,MAAR,EAAmB;AACnC;AACA,KAAIA,OAAOC,IAAP,qCAAJ,EAAyC;AACxCF,UAAQG,SAAR;AACA;;AAED,QAAOL,WAAWE,KAAX,EAAkBC,MAAlB,CAAP;AACA,CAPD;;kBASeJ,0BAA0BE,OAA1B,C","file":"store.js","sourcesContent":["import { createStore, applyMiddleware, combineReducers } from 'redux';\nimport thunk from 'redux-thunk';\nimport Preferences from 'preferences';\nimport debug from 'debug';\nimport ApiClient from './libs/api-client';\nimport * as reducers from './reducers';\nimport { USER_LOGOUT_SUCCESS } from './actions/action-types';\n\nimport { \n\taddSessionMiddleware,\n\tapiClientMiddleware,\n\tlogMiddleWare,\n\tprefsStoreMiddleware,\n\tsessionExpiryMiddleware,\n}  from './middleware';\n\n\nconst client = new ApiClient();\nconst preferences = new Preferences('toolbeam');\n\nconst middleware = [\n\taddSessionMiddleware,\n\tsessionExpiryMiddleware,\n\tthunk,\n\tapiClientMiddleware(client),\n\tprefsStoreMiddleware(preferences),\n\tlogMiddleWare(debug),\n];\n\nconst createStoreWithMiddleware = applyMiddleware(...middleware)(createStore);\nconst appReducer = combineReducers(reducers);\nconst reducer =  (state, action) => {\n\t// Clear the state on logout\n\tif (action.type === USER_LOGOUT_SUCCESS) {\n\t\tstate = undefined;\n\t}\n\n\treturn appReducer(state, action)\n};\n\nexport default createStoreWithMiddleware(reducer);\n"]}